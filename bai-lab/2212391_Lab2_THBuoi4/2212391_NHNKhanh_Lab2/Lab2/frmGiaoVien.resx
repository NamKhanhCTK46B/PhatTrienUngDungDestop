<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QB4RXhpZgAATU0AKgAAAAgAAgE7AAIAAAAbAAAAJpydAAEAAAAu
        AAAAQgAAAABOZ3V54buFbiBIb8OgbmcgTmFtIEtow6FuaAAATgBnAHUAeQDFHm4AIABIAG8A4ABuAGcA
        IABOAGEAbQAgAEsAaADhAG4AaAAAAP/bAEMABwUFBgUEBwYFBggHBwgKEQsKCQkKFQ8QDBEYFRoZGBUY
        FxseJyEbHSUdFxgiLiIlKCkrLCsaIC8zLyoyJyorKv/bAEMBBwgICgkKFAsLFCocGBwqKioqKioqKioq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKv/AABEIACkAhAMBIgACEQEDEQH/
        xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEF
        EiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNU
        VVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQID
        BAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS
        8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqC
        g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo
        6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APddQhRtQkYxjPG5yinsPU5rmNU8Q2dlI0VpF9okX7zGNQqn
        3JOfyBqbx7rBsma2gfEsx527SwAUHpjNcvoHhm58SJcTCVUji4XnJJ7dfpSqV5RtCG56eDwNOVN167tE
        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
</value>
  </data>
</root>