<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISERUSExIVEhIQEBUVFRYTFxIYFRcYFRUXFxUXGhsY
        HiggGBolGxUTITEhJSkrLi4yGB8zODMsNygtLyv/2wBDAQoKCg4NDRUQDhgtJh8lLTcrNys3NCwxNzA3
        Ny8tKysrNzUyLTAtLDgzLS0rLisrLS03MCs3LS0tNy0vMjcsNDf/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAcCAwQFBgEI/8QASBAAAQMCAgYHBAcGAwcFAAAAAQACAwQREiEFBhMx
        QVEHIjJhcZGhFFKBsSNCQ2Ky0fBTcoKSosFzwuEzg5Ozw9LxFRY0RGP/xAAXAQEBAQEAAAAAAAAAAAAA
        AAAAAQID/8QAGREBAAMBAQAAAAAAAAAAAAAAAAECERID/9oADAMBAAIRAxEAPwCcUREBERAREQEREBER
        AREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBER
        AREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBER
        AREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBEXhcOaD1FRtG8x5rwzN5oLiK17Q3n81T
        7Wz3ggvorLalh3H0KuB45oKkREBERAREQEREBERAREQEREBERARFq9PawU9GwOnkDS7JjBd0jzyYwZu+
        Q42QbRaPTmtlLSnA+THLa+yiGOTPcSBkwGx6zy0d6jzWDXqpqLtYTSQnLCxwNQ8Hg54/2fgzP73BW9C6
        k1MwuQKWJxxEvB2jicy7Bvuc7lxB8UG8qOk454acNzyxSAm1uOEWBvfIEjvWkrek6pNw0xN5BrST6ldj
        ovUejhzMe3f709n+TeyPK/eue6XNPClpm0kNmSVYOLCAMMIydu949Xwx8kTXG1nSHpB+6cjwbGP8q1su
        tda7fVzfwvc35WWjo5WhzXOYJGNObC57Q7LcSwhwHgQVI/Rw3R1a59NLQxtlbGXtdjmdjaCA7tOu1wxN
        3HO53WQcVJpqoO+qqD4zSfmrLtJy8Z5v+K/812Ov2osUDZpqTHs6VjHTse7EBjO5hPWu1lnuxE5PaQo2
        dLlcoOp1ajnq6lkTZprXxSHaP6rG9o79+4DvIUo6c09FQxDLrWwxxi3AC2+9gAW3NjvGRvlpNTNGN0fQ
        OqJurLM0PfcZtb9my3PO9ubsPJcVXTy1k5cGukkf2WNDnENFyAAMzvJJ4kk8UVtqnXWsecpQwe61rSB8
        X4neqwZtdtIRSNIqXYTkRhitcZ27N8xf+XvUl6L1J0c6NkhpXNc9jXFkklRiaSM2kF28G4UU9IOjxTVc
        0TW4WAiSMXv1D1hY+bc1E13Wiukqdtto1krebbtdb1Dj5LvdXtbqaryY7DIBcxvycPzGYzFwoa1T1k0f
        DTiOqpDLI17rSMaw3YbEXxOBuLu3cAFs9ZtWZIcNdQOMkAtKzZkmSNpG9t83tsT3i+YNiVTU5IuD6PNe
        2VrTFJZtTE27mjsyN/aM7sxccLjgQT3THA5hFVIiICIiAiIgIvHOAzJsO9Y89YGjIXJ3cEGSi1L6p53n
        COQ/V1a2pPM+OaDcl45hebQcwtbGCVVtGjjc9yDTa2abrm/RUVK5xI61RJg2bP3WYg6R3iA3vO5R+dVq
        97zI+N75ZCA+WVzXPI+ByaM7NAAHAKWxOeAt4oZjxd5f6IOX1d0JDSWd7PNLP+1kEW/7gxnAN/fzJXQt
        qJjugI/ecR8mlXxVcgSqX1DjxDUTFt8lQPsY/jMR/wBNRhrZqFWVtXJUvniYH2axgEjsDGizW3wi/wBY
        +LipNc4cXfNWXSNvYAuI38AONieduHhuuEXERRdFtQBb2hh/3bx83LM0Z0eVtPMyeGriZLESWkxk7wWk
        EYjcEEj4qU8J5W8B+d15h7vO5HkckEfVehtNOjkh/wDUIHCoLzI0QtDn7QWcCcBIbaze4AAcFptXeiqd
        lXHJUvgfBGcWGMyEuI7IIcwC19+ZyBHFS6wnwHcAFVjPNBGfSQ2rlcGsgk9niBOJoDtpJcjstOKw8PrE
        /VCajad0dRQfTTBlVITtWuZJjZYnCywBsLWPffwtIpFrjmSR8Tn6n1UV13RbPJpFs75Y5qV9SJZQ8lsh
        biuWEWIcMIDRYjLgEHVS9J2jBkJi48hHPf8AAuC6SNYqWuMLqdhMrMQe4tLXFhtgaWnM54iL7s+ammOi
        gbujY0DgAAPRX2vY3dYeACD5hpdGzlowwTOsLZRyE5ZcB3LrdBa0aVo4GwR0cj2tcS0y01W4tDjfCMJb
        le5+Km11Sy+9uXG7d/Ky9bVi1wD5IIO1T1f0hLXMqWQup8M+0e57JImNBd12Na/rOGAkAZjdcqeoZrZ7
        rb+SxTVdxWNJUXubEFu+4ytxF9x4oOhjkBFwq1ze3kZfBm6zrA3AJtdtzwzsLrP1c0samLE5oa9hwvaL
        5HlmAQeYIyRcbVEREFYrajZxuf7o9eHqrxK4jpIr6plNtacgCN4c9haHBzeGLiBfI2tbFfggqqNbImui
        bUSbJ80IlYTHJsyHcA8ZYgLEjvWfS6XglGKOogkB4xvY75OKijV3Xyne00VdGDC4ks2tnMaHuJEbjbq4
        dwdusBfvva19HsDoxU0z3OjxtMjHWkIjxDGWP7d2tJcBc7iAEErF1/r/AIPyVL6hjd8zW+Lox8woU0fo
        +GYQxClcXVD5WFjRDaMC4edqAbtaAws3YsrkguvudGdDkDWjb1L3HiIWMaB3YpMRPjYeCsxiRKRavWCl
        aOvWwtA96WABa6TXjRrN9fCf3SHfhutRB0e6IgGN8OLDvdNK8D4hpa30Vs6y6CpDaJtNj4ezQte42++1
        pHm5RW5ptfaSbKA1NRc2+gppnC+7eWAeq2ul9MxUsImnkMIIya7Zl5Nr4QGg4neBI77Zrg63phhHVjgl
        PAE4Sb8Oo02Ivb6wXLVIra6XajR9ZUE54pQImW+q3NpbhHK9u7NB3NPrTpKpBkhgijhzIM4lLg0fWfgd
        ZvE7ueZWm0vrXpGNhlM8UcdrtLGMLpM8yxr2nqZdokXOQBs4jM0ZorTz3NL46WGJrh9FNPOQW7rOELi0
        i3C3wW8rNSX1MhkqZoRitdtPE+4wizQHSyObYDIDZ2QR5FrXpGSRrHzydfdgLWnMZWDA3jZdNPQNa0vq
        62VgJJET6p0QZc7nOxAueSSSL2F7WJvbraPU6iiILWOxAWuJHsv4iIta74hbHR+iKWA3hp4YncXMjYHH
        xcBc+a5+lbWjKzjp52rWdtGuR1a1YhdUsqGxuYynOJjnvmdJK8ggkGQ32QvvHaPdcHvwOJ3Kh1jvzXK6
        +60ewU+JoEkshLIWO963WeeJa0W8SQLi61WvMYze3U7jpKvSUcQu98cbTuMjmtB8yFcjnZI3e1zXDItI
        LSPEL5T0s+oqJHSzyOlkdvc8+g4NAvkAAAs/U3WqfRs4cC4wuP0sV+q8biRwDxwPdbddaZfS5pA0jCLZ
        8LcA63z9VcEXj5lXdE1Uc8LZGODmODHtdza4ggrOOzH1h5oNdse5VCHuHks7ax8/Qp7SzvPwQYXs9ze2
        Y4pDTG38TvxFZvtbfdPorLa8Adn6zuP3j3IKRSFWqyGzD+6fkvJtJPOTQG+pXL9JGnX0ujy5rvp5nbOM
        7yHOOR8QA54/cQbWn05TPmMDZYzK3tMD2F7bb7tGYtx5Lo6CnDS5wADngYjxOHIX55FfIRZNSSR1LC9r
        muEjHuDhfcbgnttNwDa462e9fVWrmmNu2Fwthlha8W5OYHDPig6BERBg6brGQ08sshwsjicXHkLZlcGd
        fYJqKapbE7YNxMbjteSwtYNPA3w5967rWHRwqaWenP28Ekf8zSB6r5710qTS6LpKUXbJMDI4G9xc4s7m
        4zcPJBxVRSlzriwyAtawFuVl23RprY6hc6Cd16eTNpzcI3eFrhp7tx8So4DP1+t3inxPn+rIPoSi1k0R
        E90kZp4nvBxOYwNcbm5BIF8znbiVymuHSY9946EFreM7xZx7mMdu8XD4cVE4J5nzKqDj7x8zb4oM6rdN
        O7FNI6R3vSOc8/C5yUq9Fmo1LLAKqYCfE5zWxHstwkgl/vHK4G4AjfwiCOocDmSRyO/4KR+irWb2ap2L
        3fQVZAvwbJuY7uv2T/DyQTPR0EMAtDTxwj/8o42/hVqo01A2TZPnjZJYHA97Wvsdxwk3stiuV6QNTY9I
        wWFm1MQJhkO7mY3/AHD6HPmCG+2txcOuO4qglfMT2T0sroztKeWN2F7WuexwI72DPhmDY3BGS6DQ3SDp
        CnIvL7RGLXZPicSONn4cYPeSfAoPoWGIHNZMbGe83zC0WrWn4qylbNFezxYtPaY4dpru8etwdxWe1Bn1
        Ba1psQTwsQVBXTBXxsqonEGpElPeP6R7YGBsr2PbaMhz5MbH3OIAXaLHDdS3piubBBJM8kNhie84QC6z
        QTkCQCeQJHioLkoZDSGJrxVNgkdVUc7RiEjHkMqoutmyQYopSxwBaWyHO7XELGhm00zKozQmFtNRbdr4
        JZbmTHGxkTts6RtnPktuuLLWVuiyImTWL6aZxbHLgLQXtHWYRc4XjfYEg2NjcOA3ehtCF9HM47SKnqK0
        7aTCOrDSBzjG0k2dI980Qa0cYjewa4iw3WR08ns7n7OjMYijponOMULG5tcCe3MD1zJmXOF72yQSH0J6
        QLqKWmcbmkmu3/Dl67f6hJ5qSrKIOh52Coqo3WDzC24G7FHI5jrdwc8/AhS3tEF4NHFeF44DzVkvS6Cp
        zyVYbu8bnzN1dwleRWAbc8B8kHscfFRf0uVDXVNJC94jjGN73OBc1vZa1zgN4GKS/ddSjK+w4+RUJdJc
        m00mGukbE1lOy7nue1rQHSSnNgLg4ggCwJJsM0GJp2jc+GqllbgEtQZABgykMURbfO2TRUtIGeJzSMlL
        HRSb01Jf6tC0/hA9Co71miprtvNOfZKdoEeBpAYcjLd0guXydR78N2lmG3ZJlrUHQTqemhMlw9lNHGG7
        iMLWhxPeSNyDq0REGJpGs2Tb73OyaO+17nuC+Wek3SW30g8NN2QNbE08DYXPqfRfSOteq7a1rfpXwyM7
        Lmhj2kcnMeC058ciOe9RfX9C9a4uPtVNOSSbyskiJPeY7oIXt+v7DL0Qn5Z/l4KT6joY0kNzKZ/+HPIP
        +YxaDTXR1X0sbppqR7Yo83PZLBIGj3i1pxW5m2XFBx1/13eaW/X63q9hj98/yt/7k2TD9f8Ap/IlBj/r
        /wALJo5rdU9l3PgfyVJhb77fJ35KgtA+s3+v8kH0X0Y61e10+yldeppwA4nfIzc2TvPA94vliC7Ir5d0
        FpuSkkjnie3aR8yLOad7HZ3II5+O8BS1Q9MVG5o2sUsb+Ibs3tv3HECR4gINxr9qRHpBmNto6qNtmSEZ
        OHuSWzLeR3t78wYP0zq3V0ri2enkYG/XDS6MjmHt6tvjdTM3pX0ceMo/gH9iq2dKmjffkHiy390EcdEO
        sGxrPZy4bKrFgLiwlaLtPdiF295wclOYWDQ11NVRiaIRysdm19mkgg94uHA/ELMiQaHXyrMdDKRD7QXA
        MEVr4sRA3Wztvt3KNNSaOaGSpmY0wUzY8MrJ54WNMbmPawStuHiQuBLXAtAOPNud5L1/pdpQvAkZE1rm
        ulkkaXNbGL4yGtzc/MBrRvJA43UIaS0h9nSudDSx4iN+0mxgtdLIRYmR0e0PANa4NA6xxBIOl9GGZsVO
        Joqd8DHltPIajFJiJL8IJwSyuJxEYnu61ic7LiKHQ9GJWxGqnjd7QyPAKQteX3tgcZJRYnLeLDkFsdfJ
        9pikEbTLC40Lzc9uJkbo32vfaObtWW3HZEEHIKjU3Tu1e01bW1NNTsL8b/8A5FMYwXARy9otJDbMdiae
        yBfeG51CYDpudsQds8ExaD2sO0id1u+5z71Mbac8cvEj+11AGpmtHsdRPVOh2ss7XAdctDdpJtJOBLs2
        t8lvqvpSqndhkUY/dc4+bnW9EExhreefIAn8l6/IXIIHNxa0eqgOq17rnixqZGjlGRH+ABaao0vI83e5
        zzze4uPmUH0HU6epGdqpgFuAcZD5An5LFbrfQ7hOT/Q30F/RQEK153BXGySnggkrXbpLFPIIqaCOS7A7
        amR5bmSMNsINxY3z5KLptPOnrhVThhc6VjnAAiNuANDciTk3C02JN7Z71mu0NPUABrHOcN1gT8ln0PRX
        pSTMRNaDxkcW/wCUoMrQWgZpfZNoC1zjJTPDrBzm1Erw4Zm7m7P2qS4vkHHiL/SIcOaiHVjourYyx09S
        0bIERtY97gwHIhuIC2WWXBSbovRRhFjK5/ig2aLyyIPVTJIGi5IA71UrU9O14s4XQaTSWuVJDkXlxHBj
        Sf8ARc5W9KUAuGwPcPvFoB+C6Su1Sp5N4sufrejOF3ZeQghnW6lpJ3mSmp/ZXONyxjrxHwbbqeANu5cq
        /Rb/ALvmp2quidx7MgWpqOieoG4goIgi0Xn1zYfd3+q3tJVxxMwMYADvvYknmSd67Gfovqx9S6wpejus
        H2RQctLNC7fDH/I38liyxQH7IDwLh8iupk1FrB9k5Yz9T6sfYu8kHMOpIeDCPif7q2aJnDEP5fyXTO1V
        q/2LvJUnViq/Yu8kGHoDTdTRYvZ5nRiS2IFsbmkjcbOaQD3hbGbpG0o3IVIsTv2NPf8ABZWDqxVfsXeS
        8/8AalWfsX+SC4NeauYGOqeKqB4tJC5kLA4cC10bAWuBAII3EDfuNcOgIal7BT1URilkY17KlzIZYmEt
        xAA9V9gL3aT2GgC4WIdRa49iB3xWVT9HelHf/X83AH5INnUUMTqjSrKuZsNPWTSzRPNnPbLFUPdC5jGk
        uewxyStuBueuarq5hbsYMWyBu5zsnykG4LgCbC+drm5zJvYN6Wk6JNKPPWZExve8k/JdZojoZe0DazsH
        PCC4+qCJmRngFeZRPcp+0f0W0UfbL5T3kAeQXS0GrdJD/s6eMW44QT5lB85aP1SqZuxDI6/Jpt5rrNGd
        E9W+xeGRj7xz8gp1a0DIC3gvUEa6N6JIW22szndzAAPMrp9H6j0MO6AOI4vu5dGiCzBTMYLMY1o+6AFe
        REBERAREQEREBERAREQEREHmELwxjkPJVIgo2LfdHkF5sG+6PIK4iC17Oz3R5L0QN90eSuIgpEY5DyVV
        kRAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREB
        ERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREB
        ERAREQEREBERAREQf//Z
</value>
  </data>
</root>